package com.sarrawi.mynokat.viewModel

//الـ viewModel و الـ sharedViewModel هما نوعان من الـ ViewModel في تطبيقات أندرويد، ويختلفان في استخداماتهما:
//
//viewModel: يُستخدم لربط البيانات والعمليات بالـ Activity أو Fragment التي يمتلكها. كل ViewModel يكون مرتبطًا بنطاق الـ Activity أو Fragment التي ينتمي إليها. يتم التخلص من ViewModel عند التخلص من الـ Activity أو الـ Fragment المرتبطة به.
//
//sharedViewModel: يُستخدم عندما تحتاج إلى مشاركة البيانات بين عدة Fragments أو بين Fragment و Activity. عادةً ما يتم استخدامه في حالات تتطلب الوصول إلى نفس البيانات عبر أكثر من Fragment أو بين Activity و Fragment داخل نفس النشاط.
//
//لذلك، إذا كنت تحتاج إلى مشاركة البيانات بين أكثر من Fragment أو بين Fragment و Activity، يجب عليك استخدام sharedViewModel. أما إذا كنت تستخدمه داخل Activity أو Fragment واحد فقط، فإن viewModel سيكون كافيًا.

//ViewModel:
//
//الغرض: يُستخدم لتخزين الحالة وإدارة البيانات الخاصة بعرض معين (View).
//النطاق: يرتبط بـ View معين ويمكن أن يكون مخصصاً فقط لذلك العرض.
//التنقل: لا يتم مشاركته بين Views مختلفة. كل عرض لديه ViewModel خاص به.
//SharedViewModel:
//
//الغرض: يُستخدم لتخزين البيانات التي يجب أن تكون مشتركة بين عدة Views أو شاشات مختلفة.
//النطاق: يتم مشاركته بين عدة Views، ويتيح تبادل البيانات بينهم دون الحاجة إلى إعادة تحميل البيانات أو إعادة معالجتها.
//التنقل: يُستخدم عندما تحتاج إلى مشاركة المعلومات بين Views مختلفة، مما يوفر تناسقاً في البيانات عبر الشاشات.
//ببساطة، SharedViewModel يسمح بمشاركة البيانات والحالة بين شاشات متعددة، بينما ViewModel هو خاص بشاشة واحدة.
//
//باختصار، ViewModel يكون مخصصًا لشاشة أو مكون واحد، بينما SharedViewModel يُستخدم لمشاركة البيانات بين عدة شاشات أو مكونات.

//تتيح لك by activityViewModels الحصول على ViewModel مشترك بين النشاطات (Activities) أو الـ Fragments في نفس النشاط (Activity).
// هذا يعني أن الـ ViewModel سيظل متاحاً طالما أن النشاط الذي يحتوي على الـ Fragments لم يتم تدميره.